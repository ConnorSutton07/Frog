try to match input to a certain category of question
^ implemented with a neural network
^ or match keywords

have a set of templates that would frame the response in a certain way

hierarchy of n-gram models
^ if n=4 fails, try n=3, then n=2...


documents
--bible
--technical documents
--opinion pieces
--game review
--social media posts/content (strongly worded)
--philosophy
--shakespeare
--fantasy/sci-fi
--propaganda
--erotica
--autobiographies/diaries

Steps
-----

* Gather our documents
* Generate model, save it
* Add preprocessing, metadata
* Basic model working (doesnt need to terminate sentences or categorize queries yet)
* Augmenting probabilities by relevancy
* Creating categories and template structures
* ...

Later
-----

Lemmatize to broaden options (will need to convert tense somehow)



---------------------------------------------------------------------

Phase 2

- Named Entity Recognition (update weights as sentences are being generated) - staying on track
- Word Embeddings (increase the weights of close/semantically similar words) - staying on track
- Spellcheck for reddit documents - improve grammar 
- Grammar check frog output - improve grammar
- More solutions for query not in model 
    - Replace words with synonyms to search for more options in the model
- Try removing stopwords from query
- Use sentiment analysis to constrain tone change frequency
- Clean/refactor
- Resivit corpus, consider adding to increase vocab, raise n value


Later 

- Speech to Text 
- Text to Speech (Frog Voice Filtering, Pause for Ribbit)